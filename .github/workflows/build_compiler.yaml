name: Test compiler

on:
  push:
    branches:
      - 'master'
      - 'v*.*'
  pull_request:

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.0.0
      - run: rustup component add rustfmt
      - run: cargo fmt -- --check

  build_compiler_linux:
    needs: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.0.0
      - name: Cache Rust dependencies
        uses: actions/cache@v1.1.2
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
      - run: cargo test
      - run: cargo build --release
      - run: target/release/gleam --version
      - uses: actions/upload-artifact@v1
        with:
          name: gleam
          path: target/release/gleam

  build_compiler_macos:
    needs: rustfmt
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2.0.0
      - run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - name: Cache Rust dependencies
        uses: actions/cache@v1.1.2
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
      - run: $HOME/.cargo/bin/cargo test
      - run: $HOME/.cargo/bin/cargo build --release
      - run: target/release/gleam --version

  build_compiler_win:
    needs: rustfmt
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2.0.0
      - name: Cache Rust dependencies
        uses: actions/cache@v1.1.2
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**\Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-

      - run: cargo test
      - run: cargo build --release
      - run: target/release/gleam --version

  test_core_language:
    needs: build_compiler_linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.0.0
      - uses: gleam-lang/setup-erlang@v1.0.0
        with:
          otp-version: 22.1
      - uses: actions/download-artifact@v1
        with:
          name: gleam
          path: ./test/core_language
      # Artifacts remove permissions
      - name: Setup gleam compiler
        run: |
          chmod +x ./gleam
          sed -i 's/cargo run --/.\/gleam/' rebar.config
        working-directory: ./test/core_language
      - run: rebar3 install_deps
        working-directory: ./test/core_language
      - run: rebar3 eunit
        working-directory: ./test/core_language
