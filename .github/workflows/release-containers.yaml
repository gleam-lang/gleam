name: release-containers
on:
  release:
    types:
      - "published"

jobs:
  publish-release-container-images:
    name: publish-release-container-images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        base-image:
          - scratch
          - erlang
          - erlang-slim
          - erlang-alpine
          - elixir
          - elixir-slim
          - elixir-alpine

    steps: 
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Authenticate with GitHub container registry
        run: echo "${{ secrets.CONTAINER_REGISTRY_PERSONAL_ACCESS_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Download Gleam archive from GitHub release
        run: curl -Lo gleam.tar.gz https://github.com/{{ $github.repository }}/releases/download/${{ github.ref }}/gleam-${{ github.ref }}-linux-amd64.tar.gz

      - name: Unpack Gleam binary from archive
        run: tar xf gleam.tar.gz

      - name: Build container image
        run: docker build --file containers/${{ matrix.base-image }}.dockerfile --tag the-image .

      - name: Push image
        run: |
          IMAGE_ID_BASE=ghcr.io/${{ github.repository }}/gleam

          # Change all uppercase to lowercase
          IMAGE_ID_BASE=$(echo $IMAGE_ID_BASE | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Prepare the tag
          TAG=$IMAGE_ID_BASE-{{ $matrix.base-image }}:$VERSION
          echo TAG=$TAG

          # Push the image to the registry under the tag
          docker tag the-image $TAG
          docker push $TAG
