---
source: compiler-core/src/type_/tests/custom_types.rs
expression: "\ntype Fish {\n  Starfish()\n  Jellyfish(name: String, jiggly: Bool)\n}\n\nfn handle_fish(fish: Fish) {\n  case fish {\n    Starfish() -> False\n    Jellyfish(jiggly:) -> jiggly  // <- error is here\n  }\n}\n"
---
----- SOURCE CODE

type Fish {
  Starfish()
  Jellyfish(name: String, jiggly: Bool)
}

fn handle_fish(fish: Fish) {
  case fish {
    Starfish() -> False
    Jellyfish(jiggly:) -> jiggly  // <- error is here
  }
}


----- ERROR
error: Incorrect arity
   ┌─ /src/one/two.gleam:10:5
   │
10 │     Jellyfish(jiggly:) -> jiggly  // <- error is here
   │     ^^^^^^^^^^^^^^^^^^ Expected 2 arguments, got 1

This pattern accepts these additional labelled arguments:

  - name
