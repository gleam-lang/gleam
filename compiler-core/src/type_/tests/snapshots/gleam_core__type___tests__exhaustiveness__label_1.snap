---
source: compiler-core/src/type_/tests/exhaustiveness.rs
expression: "\npub type Thing {\n  Thing(a: Bool, b: Bool)\n}\n\npub fn main(x) {\n  case x {\n    Thing(a: False, b: True) -> 1\n    Thing(b: False, a: True) -> 1\n  }\n}\n"
---
error: Inexhaustive patterns
   ┌─ /src/one/two.gleam:7:3
   │  
 7 │ ╭   case x {
 8 │ │     Thing(a: False, b: True) -> 1
 9 │ │     Thing(b: False, a: True) -> 1
10 │ │   }
   │ ╰───^

This case expression does not have a pattern for all possible values.
If it is run on one of the values without a pattern then it will crash.

The missing patterns are:

    Thing(False, False)
    Thing(True, True)
