---
source: compiler-core/src/type_/tests/exhaustiveness.rs
expression: "\ntype Foo {\n    Bar(Int)\n    Baz(Qux)\n}\n\npub fn main(foo) {\n    case foo {\n        Bar(x) -> x\n    }\n}\n"
---
error: Unknown type
  ┌─ /src/one/two.gleam:4:9
  │
4 │     Baz(Qux)
  │         ^^^

The type `Qux` is not defined or imported in this module.

error: Private type used in public interface
  ┌─ /src/one/two.gleam:7:1
  │
7 │ pub fn main(foo) {
  │ ^^^^^^^^^^^^^^^^

The following type is private, but is being used by this public export.

    Foo

Private types can only be used within the module that defines them.

error: Inexhaustive patterns
   ┌─ /src/one/two.gleam:8:5
   │  
 8 │ ╭     case foo {
 9 │ │         Bar(x) -> x
10 │ │     }
   │ ╰─────^

This case expression does not have a pattern for all possible values.
If it is run on one of the values without a pattern then it will crash.

The missing patterns are:

    Baz
