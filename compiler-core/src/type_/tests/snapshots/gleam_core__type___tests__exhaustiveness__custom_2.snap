---
source: compiler-core/src/type_/tests/exhaustiveness.rs
expression: "\npub type Type {\n  One\n  Two\n  Three(Type)\n}\n\npub fn main(x) {\n  case x {\n    One -> 1\n    Two -> 2\n    Three(One) -> 4\n  }\n}\n"
---
error: Inexhaustive patterns
   ┌─ /src/one/two.gleam:9:3
   │  
 9 │ ╭   case x {
10 │ │     One -> 1
11 │ │     Two -> 2
12 │ │     Three(One) -> 4
13 │ │   }
   │ ╰───^

This case expression does not have a pattern for all possible values.
If it is run on one of the values without a pattern then it will crash.

The missing patterns are:

    Three(Three(_))
    Three(Two)
