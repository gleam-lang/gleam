---
source: compiler-core/src/type_/tests/exhaustiveness.rs
expression: "\nimport wibble as wobble\npub fn main() {\n    case wobble.Wobble {\n        wobble.Wibble -> Nil\n    }\n}\n"
---
----- SOURCE CODE
-- wibble.gleam
pub type Wibble { Wibble Wobble }

-- main.gleam

import wibble as wobble
pub fn main() {
    case wobble.Wobble {
        wobble.Wibble -> Nil
    }
}


----- ERROR
error: Inexhaustive patterns
  ┌─ /src/one/two.gleam:4:5
  │  
4 │ ╭     case wobble.Wobble {
5 │ │         wobble.Wibble -> Nil
6 │ │     }
  │ ╰─────^

This case expression does not have a pattern for all possible values. If it
is run on one of the values without a pattern then it will crash.

The missing patterns are:

    wobble.Wobble
