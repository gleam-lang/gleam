---
source: compiler-core/src/type_/tests/errors.rs
expression: "\npub type Point {\n  Point2(a: Int, b: Int)\n  Point3(a: Int, b: Int, c: Int)\n}\n\npub fn main() {\n  Point3(..Point2(a: 1, b: 2))\n}"
---
----- SOURCE CODE

pub type Point {
  Point2(a: Int, b: Int)
  Point3(a: Int, b: Int, c: Int)
}

pub fn main() {
  Point3(..Point2(a: 1, b: 2))
}

----- ERROR
error: Incorrect record update
  ┌─ /src/one/two.gleam:8:12
  │
8 │   Point3(..Point2(a: 1, b: 2))
  │            ^^^^^^^^^^^^^^^^^^ This is a `Point2`

This value is a `Point2` so it cannot be used to build a `Point3`, even if
they share some fields.

Note: If you want to change one variant of a type into another, you should
specify all fields explicitly instead of using the record update syntax.
