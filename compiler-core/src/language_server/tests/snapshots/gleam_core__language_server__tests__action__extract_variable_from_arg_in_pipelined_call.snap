---
source: compiler-core/src/language_server/tests/action.rs
expression: "\npub fn main() {\n  let adder = add\n  let x = [4, 5, 6] |> map2([1, 2, 3], adder)\n  x\n}\npub fn map2(list1: List(a), list2: List(b), fun: fn(a, b) -> c) -> List(c) { todo }\npub fn add(a: Int, b: Int) -> Int { todo }\n"
---
----- BEFORE ACTION

pub fn main() {
  let adder = add
  let x = [4, 5, 6] |> map2([1, 2, 3], adder)
                            â†‘                
  x
}
pub fn map2(list1: List(a), list2: List(b), fun: fn(a, b) -> c) -> List(c) { todo }
pub fn add(a: Int, b: Int) -> Int { todo }


----- AFTER ACTION

pub fn main() {
  let adder = add
  let ints = [1, 2, 3]
  let x = [4, 5, 6] |> map2(ints, adder)
  x
}
pub fn map2(list1: List(a), list2: List(b), fun: fn(a, b) -> c) -> List(c) { todo }
pub fn add(a: Int, b: Int) -> Int { todo }
