---
source: compiler-core/src/language_server/tests/action.rs
expression: "\nimport gleam/option.{Some}\n\npub type LinkedList {\n  LinkedList(value: Int, next: option.Option(LinkedList))\n}\n"
---
----- BEFORE ACTION

import gleam/option.{Some}

pub type LinkedList {
    â†‘                
  LinkedList(value: Int, next: option.Option(LinkedList))
}


----- AFTER ACTION

import gleam/json
import gleam/option.{Some}

pub type LinkedList {
  LinkedList(value: Int, next: option.Option(LinkedList))
}

fn encode_linked_list(linked_list: LinkedList) -> json.Json {
  let LinkedList(value:, next:) = linked_list
  json.object([
    #("value", json.int(value)),
    #("next", case next {
      option.None -> json.null()
      Some(value) -> encode_linked_list(value)
    }),
  ])
}
