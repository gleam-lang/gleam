---
source: compiler-core/src/language_server/tests/action.rs
expression: "\npub type Person {\n  Person(name: String, age: Int, height: Float, is_cool: Bool, brain: BitArray)\n}\n"
---
----- BEFORE ACTION

pub type Person {
    â†‘            
  Person(name: String, age: Int, height: Float, is_cool: Bool, brain: BitArray)
}


----- AFTER ACTION
import gleam/dynamic/decode

pub type Person {
  Person(name: String, age: Int, height: Float, is_cool: Bool, brain: BitArray)
}

fn person_decoder() -> decode.Decoder(Person) {
  use name <- decode.field("name", decode.string)
  use age <- decode.field("age", decode.int)
  use height <- decode.field("height", decode.float)
  use is_cool <- decode.field("is_cool", decode.bool)
  use brain <- decode.field("brain", decode.bit_array)
  decode.success(Person(name:, age:, height:, is_cool:, brain:))
}
