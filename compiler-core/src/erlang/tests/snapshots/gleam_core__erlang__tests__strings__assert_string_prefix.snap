---
source: compiler-core/src/erlang/tests/strings.rs
expression: "\npub fn main(x) {\n  let assert \"m-\" <> rest = x\n  rest\n}\n"
---
----- SOURCE CODE

pub fn main(x) {
  let assert "m-" <> rest = x
  rest
}


----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch, inline]).
-define(FILEPATH, "project/test/my/mod.gleam").
-export([main/1]).

-file("project/test/my/mod.gleam", 2).
-spec main(binary()) -> binary().
main(X) ->
    Rest@1 = case X of
        <<"m-"/utf8, Rest/binary>> -> Rest;
        _assert_fail ->
            erlang:error(#{gleam_error => let_assert,
                        message => <<"Pattern match failed, no pattern matched the value."/utf8>>,
                        file => <<?FILEPATH/utf8>>,
                        module => <<"my/mod"/utf8>>,
                        function => <<"main"/utf8>>,
                        line => 3,
                        value => _assert_fail,
                        start => 20,
                        'end' => 47,
                        pattern_start => 31,
                        pattern_end => 43})
    end,
    Rest@1.
