---
source: compiler-core/src/erlang/tests/let_assert.rs
assertion_line: 269
expression: "\npub fn main() {\n  let assert <<\"Hello, world!\" as message:utf8>> = <<\"Hello, world!\">>\n  message\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

pub fn main() {
  let assert <<"Hello, world!" as message:utf8>> = <<"Hello, world!">>
  message
}


----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch]).
-define(FILEPATH, "project/test/my/mod.gleam").
-export([main/0]).

-file("project/test/my/mod.gleam", 2).
-spec main() -> binary().
main() ->
    Message@1 = case <<"Hello, world!"/utf8>> of
        <<Message:13/binary>> when Message =:= <<"Hello, world!"/utf8>> -> Message;
        _assert_fail ->
            erlang:error(#{gleam_error => let_assert,
                        message => <<"Pattern match failed, no pattern matched the value."/utf8>>,
                        file => <<?FILEPATH/utf8>>,
                        module => <<"my/mod"/utf8>>,
                        function => <<"main"/utf8>>,
                        line => 3,
                        value => _assert_fail,
                        start => 19,
                        'end' => 29,
                        pattern_start => 30,
                        pattern_end => 65})
    end,
    Message@1.
