---
source: compiler-core/src/erlang/tests/patterns.rs
expression: "pub fn a(x) {\n  case x {\n    [\"a\" as a <> _, \"b\" as b <> _] -> a <> b\n    _ -> \"\"\n  }\n}"
---
----- SOURCE CODE
pub fn a(x) {
  case x {
    ["a" as a <> _, "b" as b <> _] -> a <> b
    _ -> ""
  }
}

----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch]).

-export([a/1]).

-file("/root/project/test/my/mod.gleam", 1).
-spec a(list(binary())) -> binary().
a(X) ->
    case X of
        [<<A:1/binary, _/binary>>, <<B:1/binary, _/binary>>] when (A =:= <<"a"/utf8>>) andalso (B =:= <<"b"/utf8>>) ->
            <<A/binary, B/binary>>;

        _ ->
            <<""/utf8>>
    end.
