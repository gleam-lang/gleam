---
source: compiler-core/src/erlang/tests/assert.rs
assertion_line: 51
expression: "\npub fn assert_answer(x) {\n  assert x == 42\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

pub fn assert_answer(x) {
  assert x == 42
}


----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch]).

-export([assert_answer/1]).

-file("project/test/my/mod.gleam", 2).
-spec assert_answer(integer()) -> nil.
assert_answer(X) ->
    _assert_subject = 42,
    case X =:= _assert_subject of
        true -> nil;
        false -> erlang:error(#{gleam_error => assert,
                message => <<"Assertion failed."/utf8>>,
                kind => binary_operator,
                operator => '==',
                left => #{kind => expression,
                    value => X,
                    start => 36,
                    'end' => 37
                    },
                right => #{kind => literal,
                    value => _assert_subject,
                    start => 41,
                    'end' => 43
                    },
                start => 29,
                expression_start => 36,
                expression_end => 43,
                module => <<"my/mod"/utf8>>,
                function => <<"assert_answer"/utf8>>,
                line => 3})
    end.
