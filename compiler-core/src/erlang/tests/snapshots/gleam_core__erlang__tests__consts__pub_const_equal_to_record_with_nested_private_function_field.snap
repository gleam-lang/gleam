---
source: compiler-core/src/erlang/tests/consts.rs
expression: "\n          fn identity(a) {\n            a\n          }\n\n          pub type Mapper(b) {\n            Mapper(fn(b) -> b)\n          }\n\n          pub type Funcs(b) {\n            Funcs(mapper: Mapper(b))\n          }\n\n          pub const id_mapper = Funcs(Mapper(identity))\n        "
---
----- SOURCE CODE

          fn identity(a) {
            a
          }

          pub type Mapper(b) {
            Mapper(fn(b) -> b)
          }

          pub type Funcs(b) {
            Funcs(mapper: Mapper(b))
          }

          pub const id_mapper = Funcs(Mapper(identity))
        

----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch]).

-export([identity/1]).
-export_type([mapper/1, funcs/1]).

-type mapper(I) :: {mapper, fun((I) -> I)}.

-type funcs(J) :: {funcs, mapper(J)}.

-file("/root/project/test/my/mod.gleam", 2).
-spec identity(K) -> K.
identity(A) ->
    A.
