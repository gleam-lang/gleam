---
source: compiler-core/src/erlang/tests/records.rs
assertion_line: 232
expression: "\npub type Person { Person(name: String, age: Int) }\n\npub fn main() {\n    let p = Person(\"Quinn\", 27)\n    let new_p = Person(..p, age: 28)\n    new_p\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

pub type Person { Person(name: String, age: Int) }

pub fn main() {
    let p = Person("Quinn", 27)
    let new_p = Person(..p, age: 28)
    new_p
}


----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch]).
-define(FILEPATH, "project/test/my/mod.gleam").
-export([main/0]).
-export_type([person/0]).

-type person() :: {person, binary(), integer()}.

-file("project/test/my/mod.gleam", 4).
-spec main() -> person().
main() ->
    P = {person, <<"Quinn"/utf8>>, 27},
    New_p = begin
        _record = P,
        {person, erlang:element(2, _record), 28}
    end,
    New_p.
