---
source: compiler-core/src/erlang/tests/strings.rs
expression: "\npub fn go(x) {\n  case x {\n    \"Hello, \" as greeting <> name if name == \"Dude\" -> greeting <> \"Mate\"\n    \"Hello, \" as greeting <> name -> greeting\n    _ -> \"Unknown\"\n  }\n}\n"
---
----- SOURCE CODE

pub fn go(x) {
  case x {
    "Hello, " as greeting <> name if name == "Dude" -> greeting <> "Mate"
    "Hello, " as greeting <> name -> greeting
    _ -> "Unknown"
  }
}


----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch]).

-export([go/1]).

-file("/root/project/test/my/mod.gleam", 2).
-spec go(binary()) -> binary().
go(X) ->
    case X of
        <<Greeting:7/binary, Name/binary>> when (Greeting =:= <<"Hello, "/utf8>>) andalso (Name =:= <<"Dude"/utf8>>) ->
            <<Greeting/binary, "Mate"/utf8>>;

        <<Greeting@1:7/binary, Name@1/binary>> when Greeting@1 =:= <<"Hello, "/utf8>> ->
            Greeting@1;

        _ ->
            <<"Unknown"/utf8>>
    end.
