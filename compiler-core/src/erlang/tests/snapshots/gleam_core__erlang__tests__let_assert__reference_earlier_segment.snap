---
source: compiler-core/src/erlang/tests/let_assert.rs
assertion_line: 230
expression: "\npub fn main() {\n  let assert <<length, bytes:size(length)-unit(8)>> = <<3, 1, 2, 3>>\n  bytes\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

pub fn main() {
  let assert <<length, bytes:size(length)-unit(8)>> = <<3, 1, 2, 3>>
  bytes
}


----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch]).

-export([main/0]).

-file("project/test/my/mod.gleam", 2).
-spec main() -> integer().
main() ->
    {Length@1, Bytes@1} = case <<3, 1, 2, 3>> of
        <<Length, Bytes:Length/unit:8>> -> {Length, Bytes};
        _assert_fail ->
            erlang:error(#{gleam_error => let_assert,
                        message => <<"Pattern match failed, no pattern matched the value."/utf8>>,
                        value => _assert_fail,
                        start => 19,
                        pattern_start => 30,
                        pattern_end => 68,
                        module => <<"my/mod"/utf8>>,
                        function => <<"main"/utf8>>,
                        line => 3})
    end,
    Bytes@1.
