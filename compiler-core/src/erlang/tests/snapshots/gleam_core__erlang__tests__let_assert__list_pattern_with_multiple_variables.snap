---
source: compiler-core/src/erlang/tests/let_assert.rs
expression: "pub fn go() {\n  let assert [a, b, c] = [1, 2, 3]\n  a + b + c\n}"
---
----- SOURCE CODE
pub fn go() {
  let assert [a, b, c] = [1, 2, 3]
  a + b + c
}

----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch, inline]).
-define(FILEPATH, "project/test/my/mod.gleam").
-export([go/0]).

-file("project/test/my/mod.gleam", 1).
-spec go() -> integer().
go() ->
    {A@1, B@1, C@1} = case [1, 2, 3] of
        [A, B, C] -> {A, B, C};
        _assert_fail ->
            erlang:error(#{gleam_error => let_assert,
                        message => <<"Pattern match failed, no pattern matched the value."/utf8>>,
                        file => <<?FILEPATH/utf8>>,
                        module => <<"my/mod"/utf8>>,
                        function => <<"go"/utf8>>,
                        line => 2,
                        value => _assert_fail,
                        start => 16,
                        'end' => 48,
                        pattern_start => 27,
                        pattern_end => 36})
    end,
    (A@1 + B@1) + C@1.
