---
source: compiler-core/src/erlang/tests/records.rs
assertion_line: 213
expression: "\ntype Triple {\n  Triple(a: Int, b: Int, c: Int)\n}\n\nfn main() {\n  let triple = Triple(1,2,3)\n  case triple {\n    Triple(b: the_b, ..) -> the_b\n  }\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

type Triple {
  Triple(a: Int, b: Int, c: Int)
}

fn main() {
  let triple = Triple(1,2,3)
  case triple {
    Triple(b: the_b, ..) -> the_b
  }
}


----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch]).
-define(FILEPATH, "project/test/my/mod.gleam").
-export_type([triple/0]).

-type triple() :: {triple, integer(), integer(), integer()}.

-file("project/test/my/mod.gleam", 6).
-spec main() -> integer().
main() ->
    Triple = {triple, 1, 2, 3},
    case Triple of
        {triple, _, The_b, _} ->
            The_b
    end.
