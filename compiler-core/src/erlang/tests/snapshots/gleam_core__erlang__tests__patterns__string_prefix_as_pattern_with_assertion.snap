---
source: compiler-core/src/erlang/tests/patterns.rs
assertion_line: 118
expression: "pub fn a(x) {\n  let assert \"a\" as a <> rest = \"wibble\"\n  a\n}"
snapshot_kind: text
---
----- SOURCE CODE
pub fn a(x) {
  let assert "a" as a <> rest = "wibble"
  a
}

----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch]).
-define(FILEPATH, "project/test/my/mod.gleam").
-export([a/1]).

-file("project/test/my/mod.gleam", 1).
-spec a(any()) -> binary().
a(X) ->
    {Rest@1, A@1} = case <<"wibble"/utf8>> of
        <<A:1/binary, Rest/binary>> when A =:= <<"a"/utf8>> -> {Rest, A};
        _assert_fail ->
            erlang:error(#{gleam_error => let_assert,
                        message => <<"Pattern match failed, no pattern matched the value."/utf8>>,
                        file => <<?FILEPATH/utf8>>,
                        module => <<"my/mod"/utf8>>,
                        function => <<"a"/utf8>>,
                        line => 2,
                        value => _assert_fail,
                        start => 16,
                        'end' => 26,
                        pattern_start => 27,
                        pattern_end => 43})
    end,
    A@1.
