---
source: compiler-core/src/erlang/tests.rs
assertion_line: 296
expression: "type Point { Point(x: Int, y: Int) }\n                fn y() { fn() { Point }()(4, 6) }"
snapshot_kind: text
---
----- SOURCE CODE
type Point { Point(x: Int, y: Int) }
                fn y() { fn() { Point }()(4, 6) }

----- COMPILED ERLANG
-module(my@mod).
-compile([no_auto_import, nowarn_unused_vars, nowarn_unused_function, nowarn_nomatch]).
-define(FILEPATH, "project/test/my/mod.gleam").
-export_type([point/0]).

-type point() :: {point, integer(), integer()}.

-file("project/test/my/mod.gleam", 2).
-spec y() -> point().
y() ->
    ((fun() -> fun(Field@0, Field@1) -> {point, Field@0, Field@1} end end)())(
        4,
        6
    ).
