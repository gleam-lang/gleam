---
source: compiler-core/src/package_interface/tests.rs
expression: "\npub type Box(a, b)\npub fn main(a: a, b: b, c: Box(c, d)) -> Box(a, d) {}\n    "
---
{
  "name": "my_package",
  "package_version": "11.11.11",
  "gleam_version": "1.0.0",
  "modules": {
    "my/module": {
      "documentation": [],
      "type_aliases": {},
      "types": {
        "Box": {
          "documentation": null,
          "deprecation": null,
          "parameters": 2,
          "constructors": []
        }
      },
      "values": {
        "main": {
          "documentation": null,
          "deprecation": null,
          "supported_targets": [
            "erlang",
            "javascript"
          ],
          "type": {
            "Fn": {
              "parameters": [
                {
                  "Variable": {
                    "id": 0
                  }
                },
                {
                  "Variable": {
                    "id": 1
                  }
                },
                {
                  "Named": {
                    "name": "Box",
                    "package": "my_package",
                    "module": "my/module",
                    "parameters": [
                      {
                        "Variable": {
                          "id": 2
                        }
                      },
                      {
                        "Variable": {
                          "id": 3
                        }
                      }
                    ]
                  }
                }
              ],
              "return": {
                "Named": {
                  "name": "Box",
                  "package": "my_package",
                  "module": "my/module",
                  "parameters": [
                    {
                      "Variable": {
                        "id": 0
                      }
                    },
                    {
                      "Variable": {
                        "id": 3
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
