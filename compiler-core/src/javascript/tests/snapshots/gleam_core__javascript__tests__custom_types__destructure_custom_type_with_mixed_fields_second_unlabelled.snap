---
source: compiler-core/src/javascript/tests/custom_types.rs
expression: "\ntype Cat {\n  Cat(name: String, Int)\n}\n\nfn go(cat) {\n  let Cat(x, y) = cat\n  let Cat(name: x, ..) = cat\n  let Cat(y, name: x) = cat\n  x\n}\n\n"
---
import { CustomType as $CustomType, makeError } from "../gleam.mjs";

class Cat extends $CustomType {
  constructor(name, x1) {
    super();
    this.name = name;
    this[1] = x1;
  }
}

function go(cat) {
  if (!(cat instanceof Cat)) {
    throw makeError(
      "assignment_no_match",
      "my/mod",
      7,
      "go",
      "Assignment pattern did not match",
      { value: cat }
    )
  }
  let x = cat.name;
  let y = cat[1];
  if (!(cat instanceof Cat)) {
    throw makeError(
      "assignment_no_match",
      "my/mod",
      8,
      "go",
      "Assignment pattern did not match",
      { value: cat }
    )
  }
  let x$1 = cat.name;
  if (!(cat instanceof Cat)) {
    throw makeError(
      "assignment_no_match",
      "my/mod",
      9,
      "go",
      "Assignment pattern did not match",
      { value: cat }
    )
  }
  let x$2 = cat.name;
  let y$1 = cat[1];
  return x$2;
}

