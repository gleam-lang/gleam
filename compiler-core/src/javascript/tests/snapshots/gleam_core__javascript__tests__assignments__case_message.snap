---
source: compiler-core/src/javascript/tests/assignments.rs
assertion_line: 256
expression: "\npub fn expect(value, message) {\n  let assert Ok(inner) = value as case message {\n    Ok(message) -> message\n    Error(_) -> \"No message provided\"\n  }\n  inner\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

pub fn expect(value, message) {
  let assert Ok(inner) = value as case message {
    Ok(message) -> message
    Error(_) -> "No message provided"
  }
  inner
}


----- COMPILED JAVASCRIPT
import { Ok, makeError } from "../gleam.mjs";

export function expect(value, message) {
  if (!(value instanceof Ok)) {
    throw makeError(
      "let_assert",
      "my/mod",
      3,
      "expect",
      (() => {
        if (message instanceof Ok) {
          let message$1 = message[0];
          return message$1;
        } else {
          return "No message provided";
        }
      })(),
      { value: value, start: 35, pattern_start: 46, pattern_end: 55 }
    )
  }
  let inner = value[0];
  return inner;
}
