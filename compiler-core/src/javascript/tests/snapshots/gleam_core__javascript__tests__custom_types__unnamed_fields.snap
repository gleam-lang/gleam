---
source: compiler-core/src/javascript/tests/custom_types.rs
expression: "\ntype Ip{\n    Ip(String)\n}\n\nconst local = Ip(\"0.0.0.0\")\n\nfn build(x) {\n    x(\"1.2.3.4\")\n}\n\nfn go() {\n    build(Ip)\n    Ip(\"5.6.7.8\")\n}\n\nfn destructure(x) {\n  let Ip(raw) = x\n  raw\n}\n"
---
import { CustomType as $CustomType, makeError } from "../gleam.mjs";

class Ip extends $CustomType {
  constructor(x0) {
    super();
    this[0] = x0;
  }
}

const local = new Ip("0.0.0.0");

function build(x) {
  return x("1.2.3.4");
}

function go() {
  build((var0) => { return new Ip(var0); });
  return new Ip("5.6.7.8");
}

function destructure(x) {
  if (!(x instanceof Ip)) {
    throw makeError(
      "assignment_no_match",
      "my/mod",
      18,
      "destructure",
      "Assignment pattern did not match",
      { value: x }
    )
  }
  let raw = x[0];
  return raw;
}

