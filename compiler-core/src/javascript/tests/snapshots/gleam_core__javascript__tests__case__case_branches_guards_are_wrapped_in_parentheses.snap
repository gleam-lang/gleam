---
source: compiler-core/src/javascript/tests/case.rs
expression: "\npub fn anything() -> a {\n  case [] {\n    [a] if False || True -> a\n    _ -> anything()\n  }\n}\n"
---
----- SOURCE CODE

pub fn anything() -> a {
  case [] {
    [a] if False || True -> a
    _ -> anything()
  }
}


----- COMPILED JAVASCRIPT
import { toList, Empty as $Empty } from "../gleam.mjs";

export function anything() {
  while (true) {
    let $ = toList([]);
    if (!($ instanceof $Empty)) {
      let $1 = $.tail;
      if ($1 instanceof $Empty && false || true) {
        let a = $.head;
        return a;
      }
    }
  }
}
