---
source: compiler-core/src/javascript/tests/bools.rs
assertion_line: 67
expression: "\npub type True { True False Nil }\nfn go(x, y) {\n  let assert True = x\n  let assert False = x\n  let assert Nil = y\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

pub type True { True False Nil }
fn go(x, y) {
  let assert True = x
  let assert False = x
  let assert Nil = y
}


----- COMPILED JAVASCRIPT
import { CustomType as $CustomType, makeError } from "../gleam.mjs";

const FILEPATH = "src/module.gleam";

export class True extends $CustomType {}

export class False extends $CustomType {}

export class Nil extends $CustomType {}

function go(x, y) {
  if (!(x instanceof True)) {
    throw makeError(
      "let_assert",
      FILEPATH,
      "my/mod",
      4,
      "go",
      "Pattern match failed, no pattern matched the value.",
      { value: x, start: 50, end: 60, pattern_start: 61, pattern_end: 65 }
    )
  }
  throw makeError(
    "let_assert",
    FILEPATH,
    "my/mod",
    5,
    "go",
    "Pattern match failed, no pattern matched the value.",
    { value: x, start: 72, end: 82, pattern_start: 83, pattern_end: 88 }
  )
  
}
