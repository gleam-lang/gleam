---
source: compiler-core/src/javascript/tests/inlining.rs
expression: "\nimport gleam/result\n\nfn some_function_that_is_not_inlined(f) {\n  f()\n}\n\npub fn main() {\n  use <- some_function_that_is_not_inlined()\n  use x <- result.map(Ok(1))\n  x + 1\n}\n"
---
----- SOURCE CODE

import gleam/result

fn some_function_that_is_not_inlined(f) {
  f()
}

pub fn main() {
  use <- some_function_that_is_not_inlined()
  use x <- result.map(Ok(1))
  x + 1
}


----- COMPILED JAVASCRIPT
import * as $result from "../../gleam_stdlib/gleam/result.mjs";
import { Ok } from "../gleam.mjs";

function some_function_that_is_not_inlined(f) {
  return f();
}

export function main() {
  return some_function_that_is_not_inlined(
    () => {
      let $ = new Ok(1);
      if ($ instanceof Ok) {
        let value = $[0];
        return new Ok(value + 1);
      } else {
        return $;
      }
    },
  );
}
