---
source: compiler-core/src/javascript/tests/case.rs
assertion_line: 243
expression: "\nfn anything() -> a {\n  case [] {\n    [a] if False || True -> a\n    _ -> anything()\n  }\n}\n"
snapshot_kind: text
---
----- SOURCE CODE

fn anything() -> a {
  case [] {
    [a] if False || True -> a
    _ -> anything()
  }
}


----- COMPILED JAVASCRIPT
import { toList, Empty as $Empty } from "../gleam.mjs";

function anything() {
  while (true) {
    let $ = toList([]);
    if ($ instanceof $Empty) {
      
    } else {
      let $1 = $.tail;
      if (($1 instanceof $Empty) && (false || true)) {
        let a = $.head;
        return a;
      }
    }
  }
}
