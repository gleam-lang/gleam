---
source: compiler-core/src/javascript/tests/bit_arrays.rs
expression: "\npub fn main() {\n  let assert <<len, payload:size(len * 8)>> = <<>>\n}\n"
---
----- SOURCE CODE

pub fn main() {
  let assert <<len, payload:size(len * 8)>> = <<>>
}


----- COMPILED JAVASCRIPT
import { makeError, toBitArray, bitArraySliceToInt } from "../gleam.mjs";

const FILEPATH = "src/module.gleam";

export function main() {
  let $ = toBitArray([]);
  let len$1;
  let payload;
  if ($.bitSize >= 8) {
    let len = $.byteAt(0);
    if ($.bitSize === 8 + len * 8) {
      len$1 = len;
      payload = bitArraySliceToInt($, 8, 8 + len$1 * 8, true, false);
    } else {
      throw makeError(
        "let_assert",
        FILEPATH,
        "my/mod",
        3,
        "main",
        "Pattern match failed, no pattern matched the value.",
        { value: $, start: 19, end: 67, pattern_start: 30, pattern_end: 60 }
      )
    }
  } else {
    throw makeError(
      "let_assert",
      FILEPATH,
      "my/mod",
      3,
      "main",
      "Pattern match failed, no pattern matched the value.",
      { value: $, start: 19, end: 67, pattern_start: 30, pattern_end: 60 }
    )
  }
  return $;
}
