---
source: compiler-core/src/javascript/tests/case_clause_guards.rs
expression: "\npub type A {\n  A(b: B)\n}\n\npub type B {\n  B(c: C)\n}\n\npub type C {\n  C(d: Bool)\n}\n\npub fn a(a: A) {\n  case a {\n    _ if a.b.c.d -> 1\n    _ -> 0\n  }\n}\n"
---
----- SOURCE CODE

pub type A {
  A(b: B)
}

pub type B {
  B(c: C)
}

pub type C {
  C(d: Bool)
}

pub fn a(a: A) {
  case a {
    _ if a.b.c.d -> 1
    _ -> 0
  }
}


----- COMPILED JAVASCRIPT
import { CustomType as $CustomType } from "../gleam.mjs";

export class A extends $CustomType {
  constructor(b) {
    super();
    this.b = b;
  }
}
export function A$A(b) {
  return new A(b);
}
export function A$isA(value) {
  return value instanceof A;
}
export function A$A$b(value) {
  return value.b;
}

export class B extends $CustomType {
  constructor(c) {
    super();
    this.c = c;
  }
}
export function B$B(c) {
  return new B(c);
}
export function B$isB(value) {
  return value instanceof B;
}
export function B$B$c(value) {
  return value.c;
}

export class C extends $CustomType {
  constructor(d) {
    super();
    this.d = d;
  }
}
export function C$C(d) {
  return new C(d);
}
export function C$isC(value) {
  return value instanceof C;
}
export function C$C$d(value) {
  return value.d;
}

export function a(a) {
  if (a.b.c.d) {
    return 1;
  } else {
    return 0;
  }
}
