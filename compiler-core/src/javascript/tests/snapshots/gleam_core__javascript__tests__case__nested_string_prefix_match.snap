---
source: compiler-core/src/javascript/tests/case.rs
expression: "\nfn main() {\n  case Ok([\"a\", \"b c\", \"d\"]) {\n    Ok([\"a\", \"b \" <> _, \"d\"]) -> 1\n    _ -> 1\n  }\n}\n"
---
----- SOURCE CODE

fn main() {
  case Ok(["a", "b c", "d"]) {
    Ok(["a", "b " <> _, "d"]) -> 1
    _ -> 1
  }
}


----- COMPILED JAVASCRIPT
import { Ok, toList, Empty as $Empty } from "../gleam.mjs";

function main() {
  let $ = new Ok(toList(["a", "b c", "d"]));
  let $1 = $[0];
  if ($1 instanceof $Empty) {
    return 1;
  } else {
    let $2 = $1.tail;
    if ($2 instanceof $Empty) {
      return 1;
    } else {
      let $3 = $2.tail;
      if ($3 instanceof $Empty) {
        return 1;
      } else {
        let $4 = $3.tail;
        if ($4 instanceof $Empty) {
          let $5 = $3.head;
          if ($5 === "d") {
            let $6 = $2.head;
            if ($6.startsWith("b ")) {
              let $7 = $1.head;
              if ($7 === "a") {
                return 1;
              } else {
                return 1;
              }
            } else {
              return 1;
            }
          } else {
            return 1;
          }
        } else {
          return 1;
        }
      }
    }
  }
}
