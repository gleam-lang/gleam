---
source: compiler-core/src/javascript/tests/case.rs
expression: "\nfn main() {\n  case Ok([\"a\", \"b c\", \"d\"]) {\n    Ok([\"a\", \"b \" <> _, \"d\"]) -> 1\n    _ -> 1\n  }\n}\n"
---
----- SOURCE CODE

fn main() {
  case Ok(["a", "b c", "d"]) {
    Ok(["a", "b " <> _, "d"]) -> 1
    _ -> 1
  }
}


----- COMPILED JAVASCRIPT
import { Ok, toList } from "../gleam.mjs";

function main() {
  let $ = new Ok(toList(["a", "b c", "d"]));
  if ($[0].hasLength(0)) {
    return 1;
  } else {
    if ($[0].tail.hasLength(0)) {
      return 1;
    } else {
      if ($[0].tail.tail.hasLength(0)) {
        return 1;
      } else {
        if ($[0].tail.tail.tail.hasLength(0)) {
          if ($[0].tail.tail.head === "d") {
            if ($[0].tail.head.startsWith("b ")) {
              if ($[0].head === "a") {
                return 1;
              } else {
                return 1;
              }
            } else {
              return 1;
            }
          } else {
            return 1;
          }
        } else {
          return 1;
        }
      }
    }
  }
}
