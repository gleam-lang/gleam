---
source: compiler-core/src/javascript/tests/case.rs
expression: "\nfn main() {\n  case Ok([\"a\", \"b c\", \"d\"]) {\n    Ok([\"a\", \"b \" <> _, \"d\"]) -> 1\n    _ -> 1\n  }\n}\n"
---
----- SOURCE CODE

fn main() {
  case Ok(["a", "b c", "d"]) {
    Ok(["a", "b " <> _, "d"]) -> 1
    _ -> 1
  }
}


----- COMPILED JAVASCRIPT
import { Ok, toList } from "../gleam.mjs";

function main() {
  let $ = new Ok(toList(["a", "b c", "d"]));
  let pattern = $[0];
  if (pattern.hasLength(0)) {
    return 1;
  } else {
    let pattern$1 = pattern.tail;
    if (pattern$1.hasLength(0)) {
      return 1;
    } else {
      let pattern$2 = pattern$1.tail;
      if (pattern$2.hasLength(0)) {
        return 1;
      } else {
        let pattern$3 = pattern$2.tail;
        if (pattern$3.hasLength(0)) {
          let pattern$4 = pattern$2.head;
          if (pattern$4 === "d") {
            let pattern$5 = pattern$1.head;
            if (pattern$5.startsWith("b ")) {
              let pattern$6 = pattern.head;
              if (pattern$6 === "a") {
                return 1;
              } else {
                return 1;
              }
            } else {
              return 1;
            }
          } else {
            return 1;
          }
        } else {
          return 1;
        }
      }
    }
  }
}
