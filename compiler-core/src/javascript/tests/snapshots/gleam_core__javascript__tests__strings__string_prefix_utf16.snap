---
source: compiler-core/src/javascript/tests/strings.rs
expression: "\npub fn go(x) {\n  case \"Î˜ foo bar\" {\n    \"Î˜\" <> rest -> rest\n    _ -> \"\"\n  }\n  case \"ğŸ«¥ is neutral dotted\" {\n    \"ğŸ«¥\" <> rest -> rest\n    _ -> \"\"\n  }\n  case \"ğŸ‡ºğŸ‡¸ is a cluster\" {\n    \"ğŸ‡ºğŸ‡¸\" <> rest -> rest\n    _ -> \"\"\n  }\n  case \"\\\" is a an escaped quote\" {\n    \"\\\"\" <> rest -> rest\n    _ -> \"\"\n  }\n  case \"\\\\ is a an escaped backslash\" {\n    \"\\\\\" <> rest -> rest\n    _ -> \"\"\n  }\n}\n"
---
export function go(x) {
  let $ = "Î˜ foo bar";
  if ($.startsWith("Î˜")) {
    let rest = $.slice(1);
    rest
  } else {
    ""
  }
  let $1 = "ğŸ«¥ is neutral dotted";
  if ($1.startsWith("ğŸ«¥")) {
    let rest = $1.slice(2);
    rest
  } else {
    ""
  }
  let $2 = "ğŸ‡ºğŸ‡¸ is a cluster";
  if ($2.startsWith("ğŸ‡ºğŸ‡¸")) {
    let rest = $2.slice(4);
    rest
  } else {
    ""
  }
  let $3 = "\" is a an escaped quote";
  if ($3.startsWith("\"")) {
    let rest = $3.slice(1);
    rest
  } else {
    ""
  }
  let $4 = "\\ is a an escaped backslash";
  if ($4.startsWith("\\")) {
    let rest = $4.slice(1);
    return rest;
  } else {
    return "";
  }
}
