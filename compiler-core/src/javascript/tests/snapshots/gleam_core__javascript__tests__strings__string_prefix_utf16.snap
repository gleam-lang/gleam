---
source: compiler-core/src/javascript/tests/strings.rs
assertion_line: 81
expression: "\npub fn go(x) {\n  case \"Î˜ foo bar\" {\n    \"Î˜\" <> rest -> rest\n  }\n  case \"ðŸ«¥ is neutral dotted\" {\n    \"ðŸ«¥\" <> rest -> rest\n  }\n  case \"ðŸ‡ºðŸ‡¸ is a cluster\" {\n    \"ðŸ‡ºðŸ‡¸\" <> rest -> rest\n  }\n  case \"\\\" is a an escaped quote\" {\n    \"\\\"\" <> rest -> rest\n  }\n  case \"\\\\ is a an escaped backslash\" {\n    \"\\\\\" <> rest -> rest\n  }\n}\n"
---
import { makeError } from "../gleam.mjs";

export function go(x) {
  let $ = "Î˜ foo bar";
  if ($.startsWith("Î˜")) {
    let rest = $.slice(1);
    rest
  } else {
    throw makeError(
      "case_no_match",
      "my/mod",
      3,
      "go",
      "No case clause matched",
      { values: [$] }
    )
  }
  let $1 = "ðŸ«¥ is neutral dotted";
  if ($1.startsWith("ðŸ«¥")) {
    let rest = $1.slice(2);
    rest
  } else {
    throw makeError(
      "case_no_match",
      "my/mod",
      6,
      "go",
      "No case clause matched",
      { values: [$1] }
    )
  }
  let $2 = "ðŸ‡ºðŸ‡¸ is a cluster";
  if ($2.startsWith("ðŸ‡ºðŸ‡¸")) {
    let rest = $2.slice(4);
    rest
  } else {
    throw makeError(
      "case_no_match",
      "my/mod",
      9,
      "go",
      "No case clause matched",
      { values: [$2] }
    )
  }
  let $3 = "\" is a an escaped quote";
  if ($3.startsWith("\"")) {
    let rest = $3.slice(1);
    rest
  } else {
    throw makeError(
      "case_no_match",
      "my/mod",
      12,
      "go",
      "No case clause matched",
      { values: [$3] }
    )
  }
  let $4 = "\\ is a an escaped backslash";
  if ($4.startsWith("\\")) {
    let rest = $4.slice(1);
    return rest;
  } else {
    throw makeError(
      "case_no_match",
      "my/mod",
      15,
      "go",
      "No case clause matched",
      { values: [$4] }
    )
  }
}

