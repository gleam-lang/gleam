---
source: compiler-core/src/javascript/tests/generics.rs
expression: "pub type Animal(t) {\n  Cat(type_: t)\n  Dog(type_: t)\n}\n\npub fn main() {\n  Cat(type_: 6)\n}\n"
---
----- SOURCE CODE
pub type Animal(t) {
  Cat(type_: t)
  Dog(type_: t)
}

pub fn main() {
  Cat(type_: 6)
}


----- TYPESCRIPT DEFINITIONS
import type * as _ from "../gleam.d.mts";

export class Cat<I> extends _.CustomType {
  constructor(type_: I);
  
  type_: I;
}
export function Animal$Cat<I>(type_: I): Animal$<I>;
export function Animal$isCat<I>(value: Animal$<I>): boolean;
export function Animal$Cat$0<I>(value: Animal$<I>): I;
export function Animal$Cat$type_<I>(value: Animal$<I>): I;

export class Dog<I> extends _.CustomType {
  constructor(type_: I);
  
  type_: I;
}
export function Animal$Dog<I>(type_: I): Animal$<I>;
export function Animal$isDog<I>(value: Animal$<I>): boolean;
export function Animal$Dog$0<I>(value: Animal$<I>): I;
export function Animal$Dog$type_<I>(value: Animal$<I>): I;

export type Animal$<I> = Cat<I> | Dog<I>;

export function Animal$type_<I>(value: Animal$<I>): I;

export function main(): Animal$<number>;
