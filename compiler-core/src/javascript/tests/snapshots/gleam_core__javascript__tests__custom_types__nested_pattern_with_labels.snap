---
source: compiler-core/src/javascript/tests/custom_types.rs
expression: "pub type Box(x) { Box(a: Int, b: x) }\npub fn go(x) {\n  case x {\n    Box(a: _, b: Box(a: a, b: b)) -> a + b\n    _ -> 1\n  }\n}\n"
---
----- SOURCE CODE
pub type Box(x) { Box(a: Int, b: x) }
pub fn go(x) {
  case x {
    Box(a: _, b: Box(a: a, b: b)) -> a + b
    _ -> 1
  }
}


----- COMPILED JAVASCRIPT
import { CustomType as $CustomType } from "../gleam.mjs";

export class Box extends $CustomType {
  constructor(a, b) {
    super();
    this.a = a;
    this.b = b;
  }
}
export const Box$Box = (a, b) => new Box(a, b);
export const Box$isBox = (value) => value instanceof Box;
export const Box$Box$a = (value) => value.a;
export const Box$Box$b = (value) => value.b;

export function go(x) {
  let a = x.b.a;
  let b = x.b.b;
  return a + b;
}
