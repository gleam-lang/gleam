---
source: compiler-core/src/javascript/tests/strings.rs
expression: "\npub fn go(x) {\n  case x {\n    \"\\u{0032} \" as greeting <> name -> greeting\n    \"\\u{0007ff} \" as greeting <> name -> greeting\n    \"\\u{00ffff} \" as greeting <> name -> greeting\n    \"\\u{10ffff} \" as greeting <> name -> greeting\n    _ -> \"Unknown\"\n  }\n}\n"
---
----- SOURCE CODE

pub fn go(x) {
  case x {
    "\u{0032} " as greeting <> name -> greeting
    "\u{0007ff} " as greeting <> name -> greeting
    "\u{00ffff} " as greeting <> name -> greeting
    "\u{10ffff} " as greeting <> name -> greeting
    _ -> "Unknown"
  }
}


----- COMPILED JAVASCRIPT
export function go(x) {
  if (x.startsWith("\u{0032} ")) {
    let greeting = "\u{0032} ";
    let name = x.slice(2);
    return greeting;
  } else if (x.startsWith("\u{0007ff} ")) {
    let greeting = "\u{0007ff} ";
    let name = x.slice(2);
    return greeting;
  } else if (x.startsWith("\u{00ffff} ")) {
    let greeting = "\u{00ffff} ";
    let name = x.slice(2);
    return greeting;
  } else if (x.startsWith("\u{10ffff} ")) {
    let greeting = "\u{10ffff} ";
    let name = x.slice(3);
    return greeting;
  } else {
    return "Unknown";
  }
}
