---
source: compiler-core/src/javascript/tests/case.rs
expression: "\npub fn wibble(bits) {\n  case bits {\n    <<\"aaaa\", 0, _:bits>> -> 1\n    // If the first one fails we know this one will fail as well, so it won't\n    // appear in the final else branch.\n    <<_, \"aaabbb\", 1, _:bits>> -> 2\n    _ -> 3\n  }\n}"
---
----- SOURCE CODE

pub fn wibble(bits) {
  case bits {
    <<"aaaa", 0, _:bits>> -> 1
    // If the first one fails we know this one will fail as well, so it won't
    // appear in the final else branch.
    <<_, "aaabbb", 1, _:bits>> -> 2
    _ -> 3
  }
}

----- COMPILED JAVASCRIPT
export function wibble(bits) {
  if (
    bits.bitSize >= 32 &&
    bits.byteAt(0) === 97 &&
      bits.byteAt(1) === 97 &&
      bits.byteAt(2) === 97 &&
      bits.byteAt(3) === 97 &&
    bits.bitSize >= 40
  ) {
    if (bits.byteAt(4) === 0) {
      return 1;
    } else if (
      bits.bitSize >= 56 &&
      bits.byteAt(1) === 97 &&
        bits.byteAt(2) === 97 &&
        bits.byteAt(3) === 97 &&
        bits.byteAt(4) === 98 &&
        bits.byteAt(5) === 98 &&
        bits.byteAt(6) === 98 &&
      bits.bitSize >= 64 &&
      bits.byteAt(7) === 1
    ) {
      return 2;
    } else {
      return 3;
    }
  } else {
    return 3;
  }
}
