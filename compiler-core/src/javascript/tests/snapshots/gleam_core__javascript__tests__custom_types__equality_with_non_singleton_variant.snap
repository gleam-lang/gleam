---
source: compiler-core/src/javascript/tests/custom_types.rs
expression: "\npub type Thing {\n  Variant\n  Other(String)\n}\n\npub fn check_other(x: Thing) -> Bool {\n  x == Other(\"hello\")\n}\n"
---
----- SOURCE CODE

pub type Thing {
  Variant
  Other(String)
}

pub fn check_other(x: Thing) -> Bool {
  x == Other("hello")
}


----- COMPILED JAVASCRIPT
import { CustomType as $CustomType, isEqual } from "../gleam.mjs";

export class Variant extends $CustomType {}
export const Thing$Variant = () => new Variant();
export const Thing$isVariant = (value) => value instanceof Variant;

export class Other extends $CustomType {
  constructor($0) {
    super();
    this[0] = $0;
  }
}
export const Thing$Other = ($0) => new Other($0);
export const Thing$isOther = (value) => value instanceof Other;
export const Thing$Other$0 = (value) => value[0];

export function check_other(x) {
  return isEqual(x, new Other("hello"));
}
