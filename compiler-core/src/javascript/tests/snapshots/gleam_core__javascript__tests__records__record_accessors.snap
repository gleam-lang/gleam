---
source: compiler-core/src/javascript/tests/records.rs
expression: "\npub type Person { Person(name: String, age: Int) }\npub fn get_age(person: Person) { person.age }\npub fn get_name(person: Person) { person.name }\n"
---
----- SOURCE CODE

pub type Person { Person(name: String, age: Int) }
pub fn get_age(person: Person) { person.age }
pub fn get_name(person: Person) { person.name }


----- COMPILED JAVASCRIPT
import { CustomType as $CustomType } from "../gleam.mjs";

export class Person extends $CustomType {
  constructor(name, age) {
    super();
    this.name = name;
    this.age = age;
  }
}
export function Person$Person(name, age) {
  return new Person(name, age);
}
export function Person$isPerson(value) {
  return value instanceof Person;
}
export function Person$Person$name(value) {
  return value.name;
}
export function Person$Person$age(value) {
  return value.age;
}

export function get_age(person) {
  return person.age;
}

export function get_name(person) {
  return person.name;
}
