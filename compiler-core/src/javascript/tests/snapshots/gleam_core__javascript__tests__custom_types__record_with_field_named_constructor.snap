---
source: compiler-core/src/javascript/tests/custom_types.rs
expression: "\npub type Thing {\n  Thing(constructor: Nil)\n}\n\npub fn main() {\n  let a = Thing(constructor: Nil)\n  let b = Thing(..a, constructor: Nil)\n  b.constructor\n}\n"
---
----- SOURCE CODE

pub type Thing {
  Thing(constructor: Nil)
}

pub fn main() {
  let a = Thing(constructor: Nil)
  let b = Thing(..a, constructor: Nil)
  b.constructor
}


----- COMPILED JAVASCRIPT
import { CustomType as $CustomType } from "../gleam.mjs";

export class Thing extends $CustomType {
  constructor(constructor) {
    super();
    this.constructor$ = constructor;
  }
}

export function main() {
  let a = new Thing(undefined);
  let b = (() => {
    let _record = a;
    return new Thing(undefined);
  })();
  return b.constructor$;
}
