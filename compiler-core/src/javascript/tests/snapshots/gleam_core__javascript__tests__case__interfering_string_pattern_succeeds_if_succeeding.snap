---
source: compiler-core/src/javascript/tests/case.rs
expression: "\npub fn wibble(bits) {\n  case bits {\n    <<\"aaa\", 0, _:bits>> -> 1\n    // If the first one succeeds, so will the second check, so it won't be\n    // performed twice inside the first if branch!\n    <<\"aaa\", 1, _:bits>> -> 2\n    _ -> 3\n  }\n}"
---
----- SOURCE CODE

pub fn wibble(bits) {
  case bits {
    <<"aaa", 0, _:bits>> -> 1
    // If the first one succeeds, so will the second check, so it won't be
    // performed twice inside the first if branch!
    <<"aaa", 1, _:bits>> -> 2
    _ -> 3
  }
}

----- COMPILED JAVASCRIPT
export function wibble(bits) {
  if (
    bits.bitSize >= 24 &&
    bits.byteAt(0) === 97 && bits.byteAt(1) === 97 && bits.byteAt(2) === 97 &&
    bits.bitSize >= 32
  ) {
    if (bits.byteAt(3) === 0) {
      return 1;
    } else if (bits.byteAt(3) === 1) {
      return 2;
    } else {
      return 3;
    }
  } else {
    return 3;
  }
}
