---
source: compiler-core/src/javascript/tests/case.rs
expression: "\nimport gleam\n\npub fn go(x, y) {\n   case x, y {\n     gleam.Ok(1), Ok(1) -> Ok(1)\n     _, Error(Nil) -> Error(Nil)\n     _, _ -> Error(Nil)\n   }\n}"
---
----- SOURCE CODE

import gleam

pub fn go(x, y) {
   case x, y {
     gleam.Ok(1), Ok(1) -> Ok(1)
     _, Error(Nil) -> Error(Nil)
     _, _ -> Error(Nil)
   }
}

----- COMPILED JAVASCRIPT
import * as $gleam from "../gleam.mjs";
import { Ok, Error } from "../gleam.mjs";

export function go(x, y) {
  if (y instanceof Ok) {
    if (x instanceof $gleam.Ok) {
      let $ = x[0];
      if ($ === 1) {
        let $1 = y[0];
        if ($1 === 1) {
          return x;
        } else {
          return new Error(undefined);
        }
      } else {
        return new Error(undefined);
      }
    } else {
      return new Error(undefined);
    }
  } else {
    return y;
  }
}
